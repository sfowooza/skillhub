plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.avodah.skillhub.skillhub"
    compileSdk 36
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'  // Changed from '1.8' to '17'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.avodah.skillhub.skillhub"
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }
    signingConfigs {
        release {
            def keystoreFile = file('../release-keystore.jks')
            if (keystoreFile.exists()) {
                storeFile keystoreFile
                storePassword System.getenv("STORE_PASSWORD") ?: "skillhub123"
                keyAlias System.getenv("KEY_ALIAS") ?: "skillhub-key"
                keyPassword System.getenv("KEY_PASSWORD") ?: "skillhub123"
            }
        }
    }

    buildTypes {
        release {
            // Use release signing if keystore exists, otherwise use debug signing
            def keystoreFile = file('../release-keystore.jks')
            if (keystoreFile.exists()) {
                signingConfig signingConfigs.release
            } else {
                signingConfig signingConfigs.debug
            }
            ndk {
                debugSymbolLevel 'SYMBOL_TABLE'
            }
            // Disable minification for easier debugging if no keystore
            minifyEnabled keystoreFile.exists()
            shrinkResources keystoreFile.exists()
            if (keystoreFile.exists()) {
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            }
        }
    }
}

flutter {
    source '../..'
}

dependencies {}
